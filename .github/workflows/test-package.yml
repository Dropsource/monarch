# Flutter actions:
# https://github.com/marketplace/actions/flutter-action

# Dart actions:
# https://github.com/dart-lang/setup-dart

# Other workflow yaml samples:
# - https://github.com/dart-lang/build/blob/master/.github/workflows/dart.yml
# - https://github.com/dart-lang/setup-dart
# - https://github.com/dart-lang/markdown/blob/master/.github/workflows/test-package.yml

name: Monarch Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_monarch_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # or: 'beta', 'dev' or 'master'
      - run: flutter --version

      - name: Install dependencies
        working-directory: packages/monarch
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        working-directory: packages/monarch
        run: flutter analyze

      - name: Run tests
        working-directory: packages/monarch
        run: flutter test

  analyze_monarch_annotations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_annotations
        run: dart pub get

      - name: Analyze project source
        working-directory: packages/monarch_annotations
        run: dart analyze

  analyze_monarch_grpc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_grpc
        run: dart pub get

      - name: Analyze project source
        working-directory: packages/monarch_grpc
        run: dart analyze

  analyze_monarch_definitions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_definitions
        run: dart pub get

      - name: Analyze project source
        working-directory: packages/monarch_definitions
        run: dart analyze

  analyze_monarch_http:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_http
        run: dart pub get

      - name: Analyze project source
        working-directory: packages/monarch_http
        run: dart analyze
        
  test_monarch_utils:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_utils
        run: dart pub get

      - name: Analyze project source
        working-directory: packages/monarch_utils
        run: dart analyze

      - name: Run tests
        working-directory: packages/monarch_utils
        run: dart test

  test_monarch_io_utils:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3

      - name: Install dependencies
        working-directory: packages/monarch_io_utils
        run: dart pub get
      
      - name: Analyze project source
        working-directory: packages/monarch_io_utils
        run: dart analyze
      
      - name: Run tests
        working-directory: packages/monarch_io_utils
        run: dart test

  test_monarch_cli:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1.3
      - uses: fertrig/create-file-action@1.0.2
        with:
          path: 'cli/lib'
          file: 'settings.dart'
          content: "const kDeployment = 'github-actions'; const kElasticsearchEndpoint = ''; const kElasticsearchUsername = ''; const kElasticsearchPassword = ''; const kVersionApiUrl = '';"

      - name: Install dependencies
        working-directory: cli
        run: dart pub get
      
      - name: Analyze project source
        working-directory: cli
        run: dart analyze
      
      - name: Run tests
        working-directory: cli
        run: dart test

  test_controller:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version

      - name: Install dependencies
        working-directory: controller
        run: flutter pub get

      - name: Verify formatting
        working-directory: controller
        run: dart format --output=none --set-exit-if-changed .

      # - name: Analyze project source
      #   working-directory: controller
      #   run: flutter analyze

      - name: Run tests
        working-directory: controller
        run: flutter test

  analyze_preview_api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter --version

      - name: Install dependencies
        working-directory: preview_api
        run: flutter pub get

      - name: Verify formatting
        working-directory: preview_api
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        working-directory: preview_api
        run: flutter analyze
