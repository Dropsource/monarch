// Mocks generated by Mockito 5.3.2 from annotations
// in monarch_controller/stories/controller_screen_stories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:grpc/service_api.dart' as _i2;
import 'package:grpc/src/client/call.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:monarch_grpc/src/generated/monarch_grpc.pb.dart' as _i5;
import 'package:monarch_grpc/src/generated/monarch_grpc.pbgrpc.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponseFuture_0<R> extends _i1.SmartFake
    implements _i2.ResponseFuture<R> {
  _FakeResponseFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientCall_1<Q, R> extends _i1.SmartFake
    implements _i3.ClientCall<Q, R> {
  _FakeClientCall_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseStream_2<R> extends _i1.SmartFake
    implements _i2.ResponseStream<R> {
  _FakeResponseStream_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MonarchPreviewApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockMonarchPreviewApiClient extends _i1.Mock
    implements _i4.MonarchPreviewApiClient {
  @override
  _i2.ResponseFuture<_i5.ReferenceDataInfo> getReferenceData(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReferenceData,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.ReferenceDataInfo>(
          this,
          Invocation.method(
            #getReferenceData,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.ReferenceDataInfo>(
          this,
          Invocation.method(
            #getReferenceData,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.ReferenceDataInfo>);
  @override
  _i2.ResponseFuture<_i5.ProjectDataInfo> getProjectData(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProjectData,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.ProjectDataInfo>(
          this,
          Invocation.method(
            #getProjectData,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.ProjectDataInfo>(
          this,
          Invocation.method(
            #getProjectData,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.ProjectDataInfo>);
  @override
  _i2.ResponseFuture<_i5.SelectionsStateInfo> getSelectionsState(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSelectionsState,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.SelectionsStateInfo>(
          this,
          Invocation.method(
            #getSelectionsState,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub:
            _FakeResponseFuture_0<_i5.SelectionsStateInfo>(
          this,
          Invocation.method(
            #getSelectionsState,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.SelectionsStateInfo>);
  @override
  _i2.ResponseFuture<_i5.Empty> setStory(
    _i5.StoryIdInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStory,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setStory,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setStory,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> resetStory(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetStory,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #resetStory,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #resetStory,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setTextScaleFactor(
    _i5.TextScaleFactorInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTextScaleFactor,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setTextScaleFactor,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setTextScaleFactor,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setLocale(
    _i5.LocaleInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLocale,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setLocale,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setLocale,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setTheme(
    _i5.ThemeInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setTheme,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setTheme,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setTheme,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setDevice(
    _i5.DeviceInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDevice,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setDevice,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setDevice,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setScale(
    _i5.ScaleInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setScale,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setScale,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setScale,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> setDock(
    _i5.DockInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDock,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setDock,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #setDock,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> toggleVisualDebugFlag(
    _i5.VisualDebugFlagInfo? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleVisualDebugFlag,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #toggleVisualDebugFlag,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #toggleVisualDebugFlag,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.ReloadResponse> hotReload(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #hotReload,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.ReloadResponse>(
          this,
          Invocation.method(
            #hotReload,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.ReloadResponse>(
          this,
          Invocation.method(
            #hotReload,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.ReloadResponse>);
  @override
  _i2.ResponseFuture<_i5.Empty> restartPreview(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restartPreview,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #restartPreview,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #restartPreview,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> launchDevTools(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #launchDevTools,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #launchDevTools,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #launchDevTools,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> trackUserSelection(
    _i5.UserSelectionData? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackUserSelection,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #trackUserSelection,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #trackUserSelection,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i2.ResponseFuture<_i5.Empty> terminatePreview(
    _i5.Empty? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #terminatePreview,
          [request],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #terminatePreview,
            [request],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<_i5.Empty>(
          this,
          Invocation.method(
            #terminatePreview,
            [request],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<_i5.Empty>);
  @override
  _i3.ClientCall<Q, R> $createCall<Q, R>(
    _i2.ClientMethod<Q, R>? method,
    _i6.Stream<Q>? requests, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeClientCall_1<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeClientCall_1<Q, R>(
          this,
          Invocation.method(
            #$createCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i3.ClientCall<Q, R>);
  @override
  _i2.ResponseFuture<R> $createUnaryCall<Q, R>(
    _i2.ClientMethod<Q, R>? method,
    Q? request, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createUnaryCall,
          [
            method,
            request,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseFuture_0<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseFuture_0<R>(
          this,
          Invocation.method(
            #$createUnaryCall,
            [
              method,
              request,
            ],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseFuture<R>);
  @override
  _i2.ResponseStream<R> $createStreamingCall<Q, R>(
    _i2.ClientMethod<Q, R>? method,
    _i6.Stream<Q>? requests, {
    _i2.CallOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$createStreamingCall,
          [
            method,
            requests,
          ],
          {#options: options},
        ),
        returnValue: _FakeResponseStream_2<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
        returnValueForMissingStub: _FakeResponseStream_2<R>(
          this,
          Invocation.method(
            #$createStreamingCall,
            [
              method,
              requests,
            ],
            {#options: options},
          ),
        ),
      ) as _i2.ResponseStream<R>);
}
